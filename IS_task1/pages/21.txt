Операционная система — Википедия Операционная система Материал из Википедии — свободной энциклопедии Стабильная версия , проверенная 4 апреля 2025. Перейти к навигации Перейти к поиску У этого термина существуют и другие значения, см. Операционная система (значения) . Запрос «OS» перенаправляется сюда; см. также другие значения . Операционная система Схема изображает взаимодействие ОС со всеми необходимыми компонентами. Основные возможности Управление процессами Прерывания Управление памятью Оперирование файлами Управление драйверами Вычисления в сети Защита компьютера Ввод-вывод Оболочка Операцио́нная систе́ма , сокр. ОС ( англ. operating system, OS ) — программное обеспечение , управляющее компьютерами (включая микроконтроллеры ) и позволяющее запускать на них прикладные программы [ 1 ] . Предоставляет программный интерфейс для взаимодействия с компьютером, управляет прикладными программами [ 1 ] и занимается распределением предоставляемых ресурсов, в том числе между прикладными программами [ 2 ] . Некоторые операционные системы позволяют прикладным программам работать с аппаратным обеспечением напрямую [ 3 ] . В широком смысле под операционной системой понимается совокупность ядра операционной системы и работающих поверх него программ и утилит, предоставляющих интерфейс для взаимодействия пользователя с компьютером [ 3 ] . В логической структуре типичной вычислительной системы операционная система занимает положение между устройствами с их микроархитектурой, машинным языком и, возможно, собственными (встроенными) микропрограммами (драйверами) — с одной стороны — и прикладными программами с другой. Разработчикам программного обеспечения операционная система позволяет абстрагироваться от деталей реализации и функционирования устройств, предоставляя минимально необходимый набор функций (см. интерфейс программирования приложений ). В большинстве вычислительных систем операционная система является основной, наиболее важной (а иногда и единственной) частью системного программного обеспечения . С 1990-х годов наиболее распространёнными операционными системами являются системы семейства Windows , Unix и UNIX-подобные системы . Содержание 1 История 1.1 Пакетный режим 1.2 Разделение времени и многозадачность 1.3 Разделение полномочий 1.4 Масштаб реального времени 1.5 Файловые системы и структуры 2 Функции 3 Понятие 4 Ядро 5 Основные семейства 6 UNIX, стандартизация операционных систем и POSIX 7 Примечания 8 Литература 9 Ссылки История [ править | править код ] В разделе не хватает ссылок на источники (см. рекомендации по поиску ). Информация должна быть проверяема , иначе она может быть удалена. Вы можете отредактировать статью, добавив ссылки на авторитетные источники в виде сносок . ( 30 ноября 2023 ) Предшественником операционных систем следует считать служебные программы (загрузчики и мониторы), а также библиотеки часто используемых подпрограмм , начавшие разрабатываться с появлением универсальных компьютеров 1-го поколения (конец 1940-х годов ). Служебные программы минимизировали физические манипуляции оператора с оборудованием, а библиотеки позволяли избежать многократного программирования одних и тех же действий (осуществления операций ввода-вывода , вычисления математических функций и т. п.). В 1950 — 1960-х годах сформировались и были реализованы основные идеи, определяющие функциональность ОС: пакетный режим , разделение времени и многозадачность, разделение полномочий, реальный масштаб времени, файловые структуры и файловые системы . Одной из самых первых операционных систем была GM-NAA I/O , разработанная в 1955 году для компьютера IBM 704 . Пакетный режим [ править | править код ] Необходимость оптимального использования дорогостоящих вычислительных ресурсов привела к появлению концепции «пакетного режима» исполнения программ. Пакетный режим предполагает наличие очереди программ на исполнение, причём система может обеспечивать загрузку программы с внешних носителей данных в оперативную память, не дожидаясь завершения исполнения предыдущей программы, что позволяет избежать простоя процессора. Разделение времени и многозадачность [ править | править код ] Основная статья: Разделение времени Уже пакетный режим в своём развитом варианте требует разделения процессорного времени между выполнением нескольких программ. Необходимость в разделении времени (многозадачности, мультипрограммировании) проявилась ещё сильнее при распространении в качестве устройств ввода-вывода телетайпов (а позднее, терминалов с электронно-лучевыми дисплеями) ( 1960-е годы ). Поскольку скорость клавиатурного ввода (и даже чтения с экрана) данных оператором намного ниже, чем скорость обработки этих данных компьютером, использование компьютера в «монопольном» режиме (с одним оператором) могло привести к простою дорогостоящих вычислительных ресурсов. Разделение времени позволило создать «многопользовательские» системы, в которых один (как правило) центральный процессор и блок оперативной памяти соединялся с многочисленными терминалами. При этом часть задач (таких как ввод или редактирование данных оператором) могла исполняться в режиме диалога, а другие задачи (такие как массивные вычисления) — в пакетном режиме. Разделение полномочий [ править | править код ] Распространение многопользовательских систем потребовало решения задачи разделения полномочий, позволяющей избежать возможности изменения исполняемой программы или данных одной программы в памяти компьютера другой программой (намеренно или по ошибке), а также изменения самой системы прикладной программой . Реализация разделения полномочий в операционных системах была поддержана разработчиками процессоров, предложивших архитектуры с двумя режимами работы процессора — «реальным» (в котором исполняемой программе доступно всё адресное пространство компьютера) и «защищённым» (в котором доступность адресного пространства ограничена диапазоном, выделенным при запуске программы на исполнение). Масштаб реального времени [ править | править код ] Основная статья: Операционная система реального времени Применение универсальных компьютеров для управления производственными процессами потребовало реализации «масштаба реального времени» («реального времени») — синхронизации исполнения программ с внешними физическими процессами. Включение функции масштаба реального времени позволило создавать решения, одновременно обслуживающие производственные процессы и решающие другие задачи (в пакетном режиме и/или в режиме разделения времени). Файловые системы и структуры [ править | править код ] Постепенная замена носителей с последовательным доступом ( перфолент , перфокарт и магнитных лент ) накопителями произвольного доступа (на магнитных дисках ). Файловая система — способ хранения данных на внешних запоминающих устройствах. Функции [ править | править код ] В разделе не хватает ссылок на источники (см. рекомендации по поиску ). Информация должна быть проверяема , иначе она может быть удалена. Вы можете отредактировать статью, добавив ссылки на авторитетные источники в виде сносок . ( 30 ноября 2023 ) Основные функции: Исполнение запросов программ (ввод и вывод данных, запуск и остановка других программ, выделение и освобождение дополнительной памяти и др.). Загрузка программ в оперативную память и их выполнение. Стандартизованный доступ к периферийным устройствам ( устройства ввода-вывода ). Управление оперативной памятью (распределение между процессами, организация виртуальной памяти ). Управление доступом к данным на энергонезависимых носителях (таких как жёсткий диск , оптические диски и др.), организованным в той или иной файловой системе . Обеспечение пользовательского интерфейса . Сохранение информации об ошибках системы. OS/360 использовалась на большинстве компьютеров IBM начиная с 1966, включая те компьютеры, которые помогали NASA отправить человека на Луну Дополнительные функции: Параллельное или псевдопараллельное выполнение задач ( многозадачность ). Эффективное распределение ресурсов вычислительной системы между процессами . Разграничение доступа различных процессов к ресурсам. Организация надёжных вычислений (невозможности одного вычислительного процесса намеренно или по ошибке повлиять на вычисления в другом процессе), основана на разграничении доступа к ресурсам. Взаимодействие между процессами : обмен данными, взаимная синхронизация. Защита самой системы, а также пользовательских данных и программ от действий пользователей (злонамеренных или по незнанию) или приложений. Многопользовательский режим работы и разграничение прав доступа (см.: аутентификация , авторизация ). Понятие [ править | править код ] В разделе не хватает ссылок на источники (см. рекомендации по поиску ). Информация должна быть проверяема , иначе она может быть удалена. Вы можете отредактировать статью, добавив ссылки на авторитетные источники в виде сносок . ( 30 ноября 2023 ) Существуют две группы определений операционной системы: «набор программ, управляющих оборудованием» и «набор программ, управляющих другими программами». Обе они имеют свой точный технический смысл, который связан с вопросом, в каких случаях требуется операционная система. Есть приложения вычислительной техники, для которых операционные системы излишни. Например, встроенные микрокомпьютеры , содержащиеся во многих бытовых приборах, автомобилях (иногда по десятку в каждом), простейших сотовых телефонах, постоянно исполняют лишь одну программу, запускающуюся по включении. Многие простые игровые приставки — также представляющие собой специализированные микрокомпьютеры — могут обходиться без операционной системы, запуская при включении программу, записанную на вставленном в устройство «картридже» или компакт-диске . Операционные системы нужны: если нужен универсальный механизм сохранения данных; для предоставления программам системных библиотек с часто используемыми подпрограммами; для распределения полномочий; необходима возможность имитации «одновременного» исполнения нескольких программ на одном компьютере; для управления процессами выполнения отдельных программ. Таким образом, современные универсальные операционные системы можно охарактеризовать, прежде всего, как: использующие файловые системы (с универсальным механизмом доступа к данным), многопользовательские (с разделением полномочий), многозадачные (с разделением времени). Многозадачность и распределение полномочий требуют определённой иерархии привилегий компонентов в самой операционной системе. В составе операционной системы различают три группы компонентов: ядро , содержащее планировщик; драйверы устройств, непосредственно управляющие оборудованием; сетевая подсистема, файловая система; системные библиотеки ; оболочка с утилитами . Большинство программ, как системных (входящих в операционную систему), так и прикладных, исполняются в непривилегированном («пользовательском») режиме работы процессора и получают доступ к оборудованию (и, при необходимости, к другим ресурсам ядра, а также ресурсам иных программ) только посредством системных вызовов . Ядро исполняется в привилегированном режиме: именно в этом смысле говорят, что система (точнее, её ядро) управляет оборудованием. В определении состава операционной системы значение имеет критерий операциональной целостности (замкнутости): система должна позволять полноценно использовать (включая модификацию) свои компоненты. Поэтому в полный состав операционной системы включают и набор инструментальных средств (от текстовых редакторов до компиляторов, отладчиков и компоновщиков). Ядро [ править | править код ] Основная статья: Ядро операционной системы В разделе не хватает ссылок на источники (см. рекомендации по поиску ). Информация должна быть проверяема , иначе она может быть удалена. Вы можете отредактировать статью, добавив ссылки на авторитетные источники в виде сносок . ( 30 ноября 2023 ) Ядро — центральная часть операционной системы, управляющая выполнением процессов , ресурсами вычислительной системы и предоставляющая процессам координированный доступ к этим ресурсам. Основными ресурсами являются процессорное время , память и устройства ввода-вывода . Доступ к файловой системе и сетевое взаимодействие также могут быть реализованы на уровне ядра. Как основополагающий элемент операционной системы, ядро представляет собой наиболее низкий уровень абстракции для доступа приложений к ресурсам вычислительной системы, необходимым для их работы. Как правило, ядро предоставляет такой доступ исполняемым процессам соответствующих приложений за счёт использования механизмов межпроцессного взаимодействия и обращения приложений к системным вызовам ОС. Описанная задача может различаться в зависимости от типа архитектуры ядра и способа её реализации. Объекты ядра ОС: процессы , файлы , события, потоки , семафоры , мьютексы , каналы , файлы, проецируемые в память . Основные семейства [ править | править код ] Этот раздел нужно дополнить . Пожалуйста, улучшите и дополните раздел. ( 8 марта 2023 ) Семейство Windows Семейство UNIX UNIX, стандартизация операционных систем и POSIX [ править | править код ] В разделе не хватает ссылок на источники (см. рекомендации по поиску ). Информация должна быть проверяема , иначе она может быть удалена. Вы можете отредактировать статью, добавив ссылки на авторитетные источники в виде сносок . ( 30 ноября 2023 ) К концу 1960-х годов отраслью и научно-образовательным сообществом был создан целый ряд операционных систем, реализующих все или часть очерченных выше функций. К ним относятся Atlas ( Манчестерский университет ), CTSS [англ.] и ITS [англ.] ( Массачусетский технологический институт , MIT), THE ( Эйндховенский технологический университет ), RS4000 ( Университет Орхуса ) и др. (всего эксплуатировалось более сотни различных ОС). Наиболее развитые операционные системы, такие как OS/360 ( IBM ), SCOPE ( CDC ) и завершённый уже в 1970-х годах Multics (MIT и Bell Labs ), предусматривали возможность исполнения на многопроцессорных компьютерах. Эклектичный характер разработки операционных систем привёл к нарастанию кризисных явлений, прежде всего, связанных с чрезмерными сложностью и размерами создаваемых систем. Системы были плохо масштабируемыми (более простые не могли использовать все возможности крупных вычислительных систем; более развитые неоптимально исполнялись на малых или не могли исполняться на них вовсе) и полностью несовместимыми между собой, их разработка и совершенствование затягивались. Задуманная и реализованная в 1969 году Кеном Томпсоном при участии нескольких коллег (включая Денниса Ритчи и Брайана Кернигана ), операционная система UNIX (первоначально UNICS, что обыгрывало название Multics) собрала в себя многие черты более ранних систем, но обладала целым рядом свойств, отличающих её от большинства предшественниц: простая метафорика (два ключевых понятия: вычислительный процесс и файл); компонентная архитектура: принцип «одна программа — одна функция» плюс мощные средства связывания различных программ для решения возникающих задач («оболочка»); минимизация ядра (кода, выполняющегося в «реальном» (привилегированном) режиме процессора) и количества системных вызовов; независимость от аппаратной архитектуры и реализация на машиннонезависимом языке программирования (язык программирования Си стал побочным продуктом разработки UNIX); унификация файлов. UNIX, благодаря своему удобству прежде всего в качестве инструментальной среды (среды разработки), обрела популярность сначала в университетах, а затем и в отрасли, получившей прототип единой операционной системы, которая могла использоваться на самых разных вычислительных системах и, более того, могла быть быстро и с минимальными усилиями перенесена на любую вновь разработанную аппаратную архитектуру. В конце 1970-х годов сотрудники Калифорнийского университета в Беркли внесли ряд усовершенствований в исходные коды UNIX, включая работу с протоколами TCP/IP . Их разработка стала известна под именем BSD (Berkeley Software Distribution). Задачу разработать независимую (от авторских прав Bell Labs) реализацию той же архитектуры поставил и Ричард Столлман , основатель проекта GNU . Благодаря конкурентности реализаций архитектура UNIX стала вначале фактическим отраслевым стандартом, а затем обрела статус и стандарта юридического — ISO/IEC 9945 [ 4 ] (POSIX). Только системы, отвечающие спецификации Single UNIX Specification , имеют право носить имя UNIX. К таким системам относятся AIX , HP-UX , IRIX , Mac OS X , SCO OpenServer , Solaris , Tru64 и z/OS . Операционные системы, следующие стандарту POSIX или опирающиеся на него, называют «POSIX-совместимыми» (чаще встречается словоупотребление « UNIX-подобные » или «семейство UNIX», но оно противоречит статусу торгового знака «UNIX», принадлежащего консорциуму The Open Group и зарезервированному для обозначения только операционных систем, строго следующих стандарту). Сертификация на совместимость со стандартом платная, из-за чего некоторые системы не проходили этот процесс, однако считаются POSIX-совместимыми по существу. К UNIX-подобным относятся операционные системы, основанные на последней версии UNIX, выпущенной Bell Labs ( System V ), на разработках университета Беркли ( FreeBSD , OpenBSD , NetBSD ), на основе Solaris ( OpenSolaris , BeleniX , Nexenta OS ), а также Linux , разработанная в части утилит и библиотек проектом GNU и в части ядра — сообществом, возглавляемым Линусом Торвальдсом . Стандартизация операционных систем преследует цель упрощения замены самой системы или оборудования при развитии вычислительной системы или сети и упрощении переноса прикладного программного обеспечения (строгое следование стандарту предполагает полную совместимость программ на уровне исходного текста; из-за профилирования стандарта и его развития некоторые изменения бывают всё же необходимы, но перенос программы между POSIX-совместимыми системами обходится на порядки дешевле, чем между альтернативными), а также преемственность опыта пользователей. Самым заметным эффектом существования этого стандарта стало эффективное разворачивание Интернета в 1990-х годах . Примечания [ править | править код ] ↑ 1 2 Таненбаум, 2015 , 1.1 Что такое операционная система?, p. 20—21. ↑ Hemmendinger D. Operating system : [ англ. ] // Encyclopædia Britannica : online encyclopedia. — Дата обновления: 2 декабря 2022. — Дата обращения: 4 февраля 2023. ↑ 1 2 Daniel Pierre Bovet [d] . 1.4. Basic Operating System Concepts : [ англ. ] // Understanding the Linux Kernel [d] / Daniel Pierre Bovet, M. Cesati [d] . — 3rd Edition. — O’Reilly Media , 2005, 1 November . — 944 p. — ISBN 978-0-596-00565-8 . — WD Q116678027 . ↑ Свежая версия ISO/IEC 9945 принята Международной организацией по стандартизации (ISO) в 2003 году . Литература [ править | править код ] Гордеев А. В. Операционные системы: Учебник для вузов. — 2-е изд. — СПб. : Питер , 2007. — 416 с. — ISBN 978-5-94723-632-3 . Деннинг П. Дж., Браун Р. Л. Операционные системы // Современный компьютер. — М. , 1986. Иртегов Д. В. Введение в операционные системы. — 2-е изд. — СПб. : BHV-СПб, 2007. — ISBN 978-5-94157-695-1 . Керниган Б. У. , Пайк Р. У. UNIX — универсальная среда программирования = The UNIX Programming Environment. — М. , 1992. Олифер В. Г., Олифер Н. А. Сетевые операционные системы. — СПб. : Питер , 2002. — 544 с. — ISBN 5-272-00120-6 . Столлингс У. Операционные системы = Operating Systems: Internals and Design Principles. — М. : Вильямс , 2004. — 848 с. — ISBN 0-1303-1999-6 . Таненбаум Э. С. Многоуровневая организация ЭВМ = Structured Computer Organization. — М. : Мир, 1979. — 547 с. Таненбаум Э. С. Современные операционные системы = Modern Operating Systems. — 2-е изд. — СПб. : Питер , 2005. — 1038 с. — ISBN 5-318-00299-4 . Таненбаум Э. Современные операционные системы. — 3-е издание. — СПб : Питер , 2015. — 1120 с. — (Серия «Классика Computer science»). — ISBN 978-5-496-00301-8 . — WD Q115645152 . Таненбаум Э. С. , Вудхалл А. С. Операционные системы. Разработка и реализация = Operating Systems: Design and Implementation. — 3-е изд. — СПб. : Питер , 2007. — 704 с. — ISBN 978-5-469-01403-4 . Шоу А. Логическое проектирование операционных систем = The Logical Design of Operating Systems. — М. : Мир, 1981. — 360 с. Рэймонд Э. С. Искусство программирования для UNIX = The Art of UNIX Programming. — М. : Вильямс , 2005. — 544 с. — ISBN 5-8459-0791-8 . Mark G. Sobell. UNIX System V. A Practical Guide. — 3rd ed. — 1995. Ссылки [ править | править код ] В Викисловаре есть статья « операционная система » Операционная система в каталоге ссылок Curlie (dmoz) Операционная система (Operating system) по ГОСТ 15971-90 Архивная копия от 7 октября 2014 на Wayback Machine В статье есть список источников , но в этом разделе не хватает сносок . Без сносок сложно определить, из какого источника взято каждое отдельное утверждение. Вы можете улучшить статью, проставив сноски на источники , подтверждающие информацию. Сведения без сносок могут быть удалены . ( 30 мая 2022 ) Операционные системы Для серверов или рабочих станций Unix-подобные AIX BSD GNU HP-UX Linux macOS Minix Plan 9 QNX Redox SCO OpenServer Solaris Tru64 Не Unix-подобные A2 AROS FreeDOS Haiku KolibriOS MorphOS OS/2 ArcaOS osFree ReactOS Syllable Desktop Windows Встраиваемые Аврора Android BlackBerry OS FreeRTOS HarmonyOS iOS PSP OS Sailfish OS Symbian OS Windows Embedded Mobile Phone Другие BESYS Multics Аспекты операционных систем Сравнение [англ.] Доля использования [англ.] История Типы Встраиваемая Распределённая [англ.] ОС суперкомпьютера [англ.] ОС реального времени Сетевая Мобильная Ядро Архитектура Монолитное Гибридное Виртуальное [англ.] Rump kernel [англ.] Микро- Нано- Экзо- Уни- Компоненты Модуль ядра Драйвер Режим ядра Пользовательское пространство Управление процессами Концепции Многопоточность мультипрограммирование Многозадачность вытесняющая кооперативная Планировщик задач Переключение контекста Прерывание IPC PCB Система реального времени Поток выполнения Разделение времени Алгоритмы планирования Упреждающее планирование с фиксированным приоритетом [англ.] Многоуровневые очереди с обратной связью [англ.] RR SJN SRT FIFO LIFO Управление и адресация памяти Файл Отображение в память Файлы устройств Файловая система Атрибуты файлов Журналирование inode Общий ресурс Стек Куча Кэш Сжатие Шифрование Защита Кольца защиты Сегментная адресация Сегментация Дефрагментация Страничная память Подкачка страниц Виртуальная память Менеджер виртуальной памяти VFS Ошибка сегментации Ошибка на шине [англ.] Общая ошибка защиты [англ.] Средства загрузки и инициализации BIOS EFI PXE MBR GPT Live CD Live USB Загрузчик ОС Подсистема инициализации Прочее Ввод-вывод Оболочка Интерпретатор командной строки API Системные вызовы Цикл событий Обмен сообщениями HAL Вычислительная сеть Категория Викисклад Викиучебник Викисловарь Ссылки на внешние ресурсы Словари и энциклопедии Большая датская Большая каталанская Большая китайская Большая норвежская Большая российская (научно-образовательный портал) Кругосвет Ларусса Britannica (онлайн) De Agostini Treccani Universalis Universalis Universalis В библиографических каталогах BNF : 119333481 GND : 4006216-8 J9U : 987007548430005171 LCCN : sh85094982 NDL : 00865121 NKC : ph115593 Источник — https://ru.wikipedia.org/w/index.php?title=Операционная_система&oldid=144365692 Категории : Операционная система Изобретения США Компьютерная терминология Скрытые категории: Википедия:Статьи с разделами без ссылок на источники с ноября 2023 года Википедия:Статьи без источников (не распределённые по типам) Википедия:Статьи с незавершёнными разделами с марта 2023 года Википедия:Статьи с незавершёнными разделами Википедия:Статьи с шаблонами недостатков по алфавиту Статьи со ссылками на Викисловарь Википедия:Статьи без сносок с мая 2022 года Википедия:Статьи без сносок Страницы, использующие волшебные ссылки ISBN Навигация Поиск