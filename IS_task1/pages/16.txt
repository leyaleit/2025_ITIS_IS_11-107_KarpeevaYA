Программное обеспечение — Википедия Программное обеспечение Материал из Википедии — свободной энциклопедии Текущая версия страницы пока не проверялась опытными участниками и может значительно отличаться от версии, проверенной 4 мая 2024 года ; проверки требуют 24 правки . Перейти к навигации Перейти к поиску Запрос «Software» перенаправляется сюда; см. также другие значения . Операционная система Схема изображает взаимодействие ОС со всеми необходимыми компонентами. Основные возможности Управление процессами Прерывания Управление памятью Оперирование файлами Управление драйверами Вычисления в сети Защита компьютера Ввод-вывод Оболочка Програ́ммное обеспе́чение [ 1 ] [ 2 ] [ 3 ] (допустимо также произношение обеспече́ние [ 3 ] [ 4 ] [ a ] ) ( ПО ) — программа или множество программ, используемых для управления компьютером ( ISO/IEC 26514:2008 ) [ 7 ] . Имеются и другие определения из международных и российских стандартов: совокупность программ системы обработки информации и программных документов [ b ] , необходимых для эксплуатации этих программ ( ГОСТ 19781—90 ) [ 9 ] ; все или часть программ, процедур, правил и соответствующей документации системы обработки информации [ c ] ( ISO/IEC 2382-1:1993 ) [ 10 ] [ 11 ] ; компьютерные программы, процедуры и, возможно, соответствующая документация и данные, относящиеся к функционированию компьютерной системы ( IEEE Std 829—2008 ) [ 12 ] . Программное обеспечение является одним из видов обеспечения автоматизированной системы , наряду с техническим (аппаратным), математическим, информационным, лингвистическим, организационным, методическим и правовым обеспечением [ 13 ] . Академические области, изучающие программное обеспечение, — это информатика и программная инженерия . В компьютерном сленге часто используется слово «софт» , произошедшее от английского слова «software» , которое в этом смысле впервые применил в статье журнала American Mathematical Monthly математик из Принстонского университета Джон Тьюки в 1958 году [ 14 ] . Содержание 1 История 1.1 Предыстория. Зарождение программирования 1.2 Ранняя история. Корпоративное ПО 1.3 Персональные компьютеры и программное обеспечение для массового потребителя 2 Классификация ПО 2.1 Системное программное обеспечение 2.2 Прикладное программное обеспечение 3 Лицензия 4 См. также 5 Примечания 5.1 Комментарии 5.2 Источники 6 Литература История [ править | править код ] Предыстория. Зарождение программирования [ править | править код ] Первую программу написала Ада Лавлейс для разностной машины Чарльза Бэббиджа , однако поскольку эта машина так и не была достроена, разработки леди Лавлейс остались чисто теоретическими [ 15 ] . Первая теория, касающаяся программного обеспечения, была предложена английским математиком Аланом Тьюрингом в 1936 году в эссе «On computable numbers with an application to the Entscheidungsproblem» («О вычислимых числах с приложением к проблеме разрешения ») [ 16 ] [ 17 ] [ 18 ] . Он создал так называемую машину Тьюринга , математическую модель абстрактной машины, способной выполнять последовательности рудиментарных операций, которые переводят машину из одного фиксированного состояния в другое. Главная идея заключалась в математическом доказательстве факта, что любое наперёд заданное состояние системы может быть всегда достигнуто последовательным выполнением конечного набора элементарных команд (программы) из фиксированного набора команд. Первые электронно-вычислительные машины 1940—1950-х годов перепрограммировались путём переключения тумблеров и переподключения кабелей, что требовало глубокого понимания их внутреннего устройства. К таким машинам, в частности, относился ENIAC (который, впрочем, впоследствии модифицировали, чтобы он мог, по крайней мере частично, программироваться с помощью перфокарт ) [ 19 ] . Важным шагом в сторону современных компьютеров был переход к архитектуре Джона фон Неймана , впервые воплощённой в Великобритании , в разработанном под руководством Дж. Р. Уомерсли [англ.] и при участии Алана Тьюринга компьютере, известном как Марк I . Первая программа, хранимая в памяти компьютера, была запущена на нём 21 июня 1941 года. Для облегчения программирования этой машины Тьюринг придумал систему сокращённого кодирования, в которой для представления двоичного машинного кода использовалась последовательность телетайпных кодов символов, выводимая на перфоленту [ 20 ] . Один из сотрудников Тьюринга, Джон Мокли , став позднее (вместе с Джоном Преспером Эккертом ) руководителем и основателем компании Eckert–Mauchly Computer Corporation , разработавшей такие ЭВМ , как BINAC и UNIVAC , поручил своим сотрудникам создать транслятор алгебраических формул. Хотя эта амбициозная цель в 1940-х годах и не была достигнута, под руководством Мокли был разработан так называемый « Краткий код », в котором операции и переменные кодировались двухсимвольными сочетаниями. Краткий код был реализован с помощью интерпретатора [ 21 ] . Грейс Хоппер , работая с начала 1950-х годов над набором математических подпрограмм для UNIVAC I , изобрела программу- компоновщик A-0 , которая по заданному идентификатору осуществляла выборку нужной подпрограммы из библиотеки , хранящейся на магнитной ленте , и записывала её в отведённое место оперативной памяти [ 22 ] . В 1950-е годы появились первые высокоуровневые языки программирования, Джон Бэкус разработал FORTRAN , а Грейс Хоппер — COBOL . Подобные разработки значительно упростили написание прикладного программного обеспечения, которое писала тогда каждая фирма, приобретающая вычислительную машину [ 23 ] . В начале 1950-х годов понятие программного обеспечения ещё не сложилось. Так, не говорилось о нём ничего в вышедшей в январе 1952 года в журнале Fortune статье «Office Robots», описывавшем компьютеры Univac. Хотя в статье уже рассказывается о компьютере как об универсальном устройстве, процесс программирования в этой статье был анахронически описан как «переключение тумблеров» [ 24 ] . Однако к середине 50-х годов уже вполне сложилась разработка программного обеспечения на заказ [ 25 ] , хотя сам термин «программное обеспечение» ещё не использовался, тогда говорили просто о «программировании на заказ» или «программистском обслуживании» [ 26 ] . Первой программной фирмой стала компания System Development Corporation , созданная в 1956 году на базе принадлежащей правительству США фирме RAND Corporation [ 27 ] . На этом этапе заказчиками программного обеспечения (уникального и не тиражируемого) были крупные корпорации и государственные структуры, и стоимость в один миллион долларов за программу не была чем-то необычным [ 28 ] . Ранняя история. Корпоративное ПО [ править | править код ] Сам термин «программное обеспечение» вошёл в широкий обиход с начала 1960-х годов, когда стало актуальным разграничение команд, управляющих компьютером, и его физических компонентов — аппаратного обеспечения [ 29 ] . Тогда же и началось становление индустрии программного обеспечения , как самостоятельной отрасли . Первой компанией по разработке ПО стала основанная в 1959 году Роем Наттом [англ.] и Флетчером Джоунсом [англ.] Computer Sciences Corporation [англ.] с начальным капиталом в 100 долларов . Первыми клиентами CSC и появившихся вслед за нею софтверных компаний были сверхкрупные корпорации и государственные организации, вроде NASA [ 30 ] , и фирма продолжала работать на рынке заказного ПО, как и другие первые программистские частные стартапы , такие как Computer Usage Company [англ.] (CUC) [ 27 ] . Первыми самостоятельно выпущенными программными продуктами, не поставляемыми в комплекте с компьютерным оборудованием, были выпущенный фирмой Applied Data Research в 1965 году генератор компьютерной документации Autoflow [англ.] , автоматически рисующий блок-схемы , и транслятор языка программирования MARK-IV [англ.] , разработанный в 1960—1967 годах в Informatics, Inc. [ 26 ] [ 31 ] Становление рынка корпоративного программного обеспечения тесно связано с появлением семейства компьютеров IBM System/360 . Достаточно массовые, относительно недорогие вычислительные машины, совместимые друг с другом на уровне программного кода, открыли дорогу тиражируемому программному обеспечению [ 32 ] . Постепенно круг заказчиков программного обеспечения расширялся, что стимулировало разработку новых видов программного обеспечения. Так появились первые фирмы, специализирующиеся на разработке систем автоматизированного проектирования [ 30 ] . В ноябре 1966 года журнал Business Week впервые обратился к теме индустрии программного обеспечения. Статья называлась «Software Gap — A Growing Crisis for Computers» и рассказывала как о перспективности этого бизнеса, так и о кризисе, связанном с нехваткой программистов [ 24 ] . Типичные программные продукты того времени служили для автоматизации общих для бизнеса задач, таких, как начисление заработной платы или автоматизации бизнес-процессов таких предприятий среднего бизнеса, как фабрика или коммерческий банк . Стоимость такого ПО, как правило, была между пятью и ста тысячами долларов [ 26 ] . Персональные компьютеры и программное обеспечение для массового потребителя [ править | править код ] Появление в 1970-х годах первых персональных компьютеров (таких, как Альтаир 8800 ) создало предпосылки и для зарождения массового рынка программного обеспечения. Изначально программы для персональных компьютеров распространялись в «коробочной» форме через торговые центры или по почте и имели цену 100—500 долларов США [ 26 ] . Знаковыми для зарождающего массового рынка программного обеспечения стали такие продукты, как электронная таблица VisiCalc , идея которой пришла Дэниелу Бриклину , когда тот, будучи выпускником MIT и инженером-программистом в DEC , посещал курсы в Гарвардской школе бизнеса и хотел облегчить себе утомительные финансовые расчёты [ 33 ] , и текстовый процессор WordStar [англ.] , разработку которого начал Сеймур Рубинштейн [англ.] , тщательно изучив потребности рынка [ 34 ] . О VisiCalc впервые заговорили, как о killer application , то есть компьютерном приложении, которое самим фактом своего существования доказывает нужность (и, зачастую, необходимость покупки) платформы, для которой реализована такая программа. Для VisiCalc и WordStar такой платформой стали персональные компьютеры, которые благодаря им из богатой игрушки для гиков стали рабочим инструментом. С них началась микрокомпьютерная революция , а у этих программ появились конкуренты: электронные таблицы SuperCalc , Lotus 1-2-3 , система управления базами данных dBase II , текстовый процессор WordPerfect и др. [ 35 ] Текстовые процессоры, электронные таблицы, системы управления базами данных, а также графические редакторы вскоре стали основными продуктами рынка программного обеспечения для персональных компьютеров [ 36 ] . Массовое тиражирование позволило снизить к середине 1990-х годов стоимость программного обеспечения для персональных компьютеров до ста — пятисот долларов [ 26 ] , при этом бизнес производителей ПО приобрёл определённое сходство с бизнесом звукозаписывающих компаний [ 35 ] . Классификация ПО [ править | править код ] Подходы к классификации ПО достаточно подробно формализованы в международной технической рекомендации ISO/IEC TR 12182 [ 37 ] . В частности, первая версия рекомендации предусматривала 16 критериев классификации программных средств: по режиму эксплуатации; по масштабу; по стабильности; по функции; по требованию защиты; по требованию надёжности; по требуемым рабочим характеристикам; по исходному языку; по прикладной области; по вычислительной системе и среде; по классу пользователя; по требованию к вычислительным ресурсам; по критичности; по готовности; по представлению данных; по использованию программных данных. Примерами классов функции ПС являются: обработка деловых сообщений; компиляция; научные вычисления; обработка текстов; медицинские системы; системы управления. Примерами классов прикладной области являются: наука; бытовые устройства; оборудование; аппаратура управления процессом; предпринимательство; система организации сети. Примерами классов масштаба ПС являются: малый; средний; большой. Примерами классов критичности являются: национальная безопасность; человеческая жизнь; социальный хаос или паника; организационная безопасность; частная собственность; секретность. Примерами классов пользователя являются: начинающий; средний; специалист (эксперт); обычный; случайный; другая система программного обеспечения; технические средства. Примерами классов стабильности являются: постоянное внесение изменений; дискретное внесение изменений; маловероятное внесение изменений. По степени переносимости программы делят на: платформозависимые; кроссплатформенные . По способу распространения и использования программы делят на ➤ : проприетарные ; открытые ; свободные . По назначению программы делят на: системные ➤ ; прикладные ➤ . По видам программы делят на [ 8 ] : программный компонент — программа, рассматриваемая как единое целое, выполняющая законченную функцию; программный комплекс — программа, состоящая из двух или более программных компонентов и (или) программных комплексов, выполняющих взаимосвязанные функции; комплекс программ — совокупность программ, выполняющих не взаимосвязанные или непосредственно не связанные функции. Классификация программного обеспечения по сектору индустрии Классификация программного обеспечения по сектору индустрии включает несколько подходов. В целом, программное обеспечение делят на заказное , то есть создаваемое для конкретного заказчика, и продуктовое , то есть создаваемое для продажи на рынке. В свою очередь, по типам потребителя ПО делят на Business-to-Business ( B2B ), то есть для предприятий и организаций, и Business-to-Consumer ( B2C ), то есть для частных лиц [ 38 ] . Одним из вариантов классификации по сектору индустрии является деление на ПО для корпоративного заказчика ( англ. enterprise software vendors ), ПО для массового потребителя ( англ. mass-market software vendors ) и ИТ-сервисы [ 39 ] . Другой подход состоит в делении индустрии ПО на три сектора: бизнес-продукты общего назначения ( англ. Business Function Software ), специализированные бизнес-продукты ( англ. Industrial Business Software ) и продукты для частной жизни ( англ. Consumer Software ). Бизнес-продукты общего назначения предназначены для поддержки функционирования предприятий и организаций и включают бухгалтерские системы, финансовые системы, системы кадрового учёта и т. п. Специализированные бизнес-продукты ориентированы на задачи конкретного типа бизнеса: геоинформационные системы, медицинские системы, логистические системы и т. п. Продукты для частной жизни включают антивирусное ПО и системы для информационной безопасности, различные полезные утилиты, образовательное ПО, мультимедийное ПО и т. п. [ 38 ] Системное программное обеспечение [ править | править код ] Основная статья: Системное программное обеспечение Комплекс программ, которые обеспечивают управление компонентами компьютерной системы , такими как процессор , оперативная память , устройства ввода-вывода , сетевое оборудование , выступая как «межслойный интерфейс», с одной стороны которого аппаратура, а с другой — приложения пользователя. В отличие от прикладного программного обеспечения , системное не решает конкретные практические задачи, а лишь обеспечивает работу других программ, предоставляя им сервисные функции, абстрагирующие детали аппаратной и микропрограммной реализации вычислительной системы, управляет аппаратными ресурсами вычислительной системы. Отнесение того или иного программного обеспечения к системному условно, и зависит от соглашений, используемых в конкретном контексте. Как правило, к системному программному обеспечению относятся операционные системы , утилиты , системы управления базами данных , широкий класс связующего программного обеспечения . Прикладное программное обеспечение [ править | править код ] Основная статья: Прикладное программное обеспечение Прикладное программное обеспечение — программа, предназначенная для выполнения определённых пользовательских задач и рассчитанная на непосредственное взаимодействие с пользователем. Лицензия [ править | править код ] Основная статья: Лицензия на программное обеспечение Пользователь получает программное обеспечение вместе с лицензией , которая предоставляет ему право использовать программный продукт при условии выполнения положений о лицензировании. Как правило, эти условия ограничивают возможности пользователя передавать программный продукт другим пользователям, изменять код. Часть программного обеспечения поставляется со свободной лицензией. Такие лицензии позволяют распространять программное обеспечение, а также модифицировать его. Часть программного обеспечения распространяется как бесплатное. Существует также условно бесплатное программное обеспечение. В этом случае обычно пользователь бесплатно получает демонстрационную версию программного продукта с несколько ограниченными возможностями на определённый испытательный период, а после его окончания обязан или приобрести продукт, или деинсталлировать его. См. также [ править | править код ] Медиафайлы на Викискладе Программно-аппаратный комплекс Патенты и программное обеспечение Лицензия на программное обеспечение Проприетарное программное обеспечение Свободное программное обеспечение Открытое программное обеспечение Компьютерный язык Язык программирования По области применения: Связующее программное обеспечение Программная инженерия Жизненный цикл программного обеспечения Раздутое программное обеспечение Software Asset Management Примечания [ править | править код ] Комментарии [ править | править код ] ↑ Издание орфографического словаря Ожегова 2007 года [ 5 ] и издание словаря Розенталя 2006 и 2007 года [ 6 ] приводят единственный вариант — обеспече́ние . ↑ Согласно ГОСТ 19.101—2024 [ 8 ] , «к программным документам относятся документы, содержащие сведения, необходимые для разработки, изготовления, сопровождения и эксплуатации программ». ↑ Согласно ISO/IEC 2382-1:1993 [ 10 ] , система обработки информации — это одна или большее число компьютерных систем и устройств, таких как офисное и коммуникационное оборудование, которые выполняют обработку информации. Источники [ править | править код ] ↑ Ожегов С. И. Словарь русского языка. — М. : Русский язык, 1986. — С. 364. ↑ Акцентологический словарь (неопр.) . Дата обращения: 26 мая 2007. Архивировано 3 апреля 2007 года. ↑ 1 2 Словари русского языка — Проверка слова «обеспечение» (рус.) . Грамота.ру . Архивировано 3 апреля 2018 года. ↑ Резниченко И. Л. Орфоэпический словарь русского языка: Произношение. Ударение: Ок. 25 000 единиц / Резниченко И. Л. — М.: ООО «Издательство Астрель»: ООО «Издательство АСТ», 2003. — 284 c. ↑ Орфографический словарь русского языка / Под редакцией С. И. Ожегова. — Локид-Пресс, 2007. — 912 с. — ISBN 5-320-00396-X . ↑ Д. Э. Розенталь . Русский язык. Справочник-практикум. — Оникс, Мир и образование, 2007. — ISBN 5-488-00712-1 , 5-94666-332-1, 978-5-488-01360-5. ↑ ISO/IEC 26514:2008 — Systems and Software Engineering — Requirements for designers and developers of user documentation ↑ 1 2 ГОСТ 19.101—2024 «Единая система программной документации. Виды программ и программных документов» ↑ ГОСТ 19781—90 «Обеспечение систем обработки информации программное. Термины и определения» ↑ 1 2 ISO/IEC 2382-1:1993 — Information technology — Vocabulary (неопр.) . Дата обращения: 18 октября 2012. Архивировано 18 сентября 2012 года. ↑ Батоврин, 2012 . ↑ IEEE Std 829—2008 — IEEE Standard for Software and System Test Documentation ↑ ГОСТ 34.003—90 «Информационная технология. Комплекс стандартов на автоматизированные системы. Автоматизированные системы. Термины и определения» ↑ John Tukey, 85, Statistician; Coined the Word 'Software' . Obituaries . New York Times. 28 июля 2000. ↑ Computer Languages, 1989 , 1. Невидимый конструктор § Предвестники компьютерной эры, с. 11. ↑ Turing A. On Computable Numbers, with an Application to the Entscheidungsproblem (англ.) // Proceedings of the London Mathematical Society — London Mathematical Society , 1937. — Vol. s2-42, Iss. 1. — P. 230—265. — ISSN 0024-6115 ; 1460-244X ; 0024-6115 — doi:10.1112/PLMS/S2-42.1.230 ↑ Turing A. M. On Computable Numbers, with an Application to the Entscheidungsproblem. A Correction (англ.) // Proceedings of the London Mathematical Society — London Mathematical Society , 1938. — Vol. s2-43, Iss. 6. — P. 544—546. — ISSN 0024-6115 ; 1460-244X ; 0024-6115 — doi:10.1112/PLMS/S2-43.6.544 ↑ Hally, Mike. Electronic brains/Stories from the dawn of the computer age (англ.) . — London: British Broadcasting Corporation and Granta Books, 2005. — P. 79 . — ISBN 1-86207-663-4 . ↑ Computer Languages, 1989 , 1. Невидимый конструктор, с. 10—11. ↑ Computer Languages, 1989 , 1. Невидимый конструктор, с. 14—16. ↑ Computer Languages, 1989 , 1. Невидимый конструктор § Создание кодов, понятных человеку, с. 16. ↑ Computer Languages, 1989 , 1. Невидимый конструктор § Шаг на благо программирования, с. 18—20. ↑ Computer Languages, 1989 , 1. Невидимый конструктор § Шаг на благо программирования, с. 20. ↑ 1 2 Campbell-Kelly, 2003 , 1. The Software Industry, p. 1. ↑ Campbell-Kelly, 2003 , 1. The Software Industry § Periodization, Sectorization, and Capabilities, p. 3. ↑ 1 2 3 4 5 Campbell-Kelly, 2003 , 1. The Software Industry § Periodization, Sectorization, and Capabilities, p. 4. ↑ 1 2 Campbell-Kelly, 2003 , 1. The Software Industry § Software Contractors, p. 5. ↑ Campbell-Kelly, 2003 , 1. The Software Industry § Periodization, Sectorization, and Capabilities, p. 3—4. ↑ Computer Languages, 1989 , 1. Невидимый конструктор, с. 10. ↑ 1 2 Computer Languages, 1989 , 3. Расцвет программного обеспечения § Производство программного обеспечения становится самостоятельной отраслью, с. 61. ↑ Campbell-Kelly, 2003 , 4. Origins of the Software Products Industry § Pioneering in the Software Products Industry: Informatics Mark IV, p. 103—104. ↑ Campbell-Kelly, 2003 , 1. The Software Industry § Corporate Software Products, p. 6. ↑ Computer Languages, 1989 , 3. Расцвет программного обеспечения § Первые промышленные стандарты, p. 68—69. ↑ Computer Languages, 1989 , 3. Расцвет программного обеспечения § Первые промышленные стандарты, p. 68. ↑ 1 2 Campbell-Kelly, 2003 , 1. The Software Industry § Mass-Market Software Products, p. 7. ↑ Computer Languages, 1989 , 3. Расцвет программного обеспечения § Четыре «рабочие лошадки», с. 75—84. ↑ ISO/IEC TR 12182:2015 — Systems and software engineering — Framework for categorization of IT systems and software, and guide for applying it (неопр.) . Дата обращения: 4 марта 2018. Архивировано 4 марта 2018 года. ↑ 1 2 Werder, Karl, Wang, Hua-Ying. Towards a Software Product Industry Classification Архивная копия от 13 апреля 2021 на Wayback Machine // New Trends in Software Methodologies, Tools and Techniques. H. Fujita, G. A. Papadopoulos, IOS Press, 2016. ISBN 978-1-61499-674-3 . DOI: 10.3233/978-1-61499-674-3-27 ↑ Campbell-Kelly M., Garcia-Swartz, D. From Products to Services: The Software Industry in the Internet Era Архивная копия от 12 августа 2021 на Wayback Machine // The Business History Review, Vol. 81, No. 4 (Winter, 2007), pp. 735—764. DOI: 10.2307/25097422 Литература [ править | править код ] ГОСТ Р ИСО/МЭК 12207—2010 «Информационная технология. Системная и программная инженерия. Процессы жизненного цикла программных средств» Батоврин В. К. Толковый словарь по системной и программной инженерии. — М. : ДМК Пресс, 2012. — С. 280. — ISBN 978-5-94074-818-2 . Брукс Ф. Мифический человеко-месяц или как создаются программные системы. — СПб. : Символ-Плюс, 1999. ДеМарко Т. Deadline. Роман об управлении проектами. — М.: Манн, Иванов и Фербер. — 2013. — 352 с. — ISBN 978-5-91657-284-1 . ДеМарко Т., Листер Т. Человеческий фактор. Успешные проекты и команды. — М.: Символ-Плюс. — 2014. — 288 с. — ISBN 978-5-93286-217-9 . Йордан Э. Путь камикадзе. Как разработчику программного обеспечения выжить в безнадёжном проекте. — М.: Лори, 2012. — 290 с. — ISBN 978-5-85582-227-3 . Соммервилл И. Инженерия программного обеспечения. — Издательство Вильямс, 2002. — 624 с. ISBN 5-8459-0330-0 . Time-Life Books. Язык компьютера = Computer Languages. — М. : Мир, 1989. — Т. 2. — 240 с. — (Understanding Computers). — 100 000 экз. — ISBN 5-03-001148-X . Martin Campbell-Kelly. From Airline Reservations to Sonic the Hedgehog: A History of the Software Industry . — MIT Press, 2003. — 372 с. — (History of Computing). — ISBN 978-1422391761 . Ссылки на внешние ресурсы Словари и энциклопедии Большая каталанская Большая российская (научно-образовательный портал) Итальянская Корейской культуры Ларусса Britannica (онлайн) De Agostini Treccani Universalis В библиографических каталогах BNE : XX530960 BNF : 133183707 GND : 4055382-6 J9U : 987007545619305171 LCCN : sh85029534 NDL : 00684642 NKC : ph125823 Разработка программного обеспечения Процесс Стадии разработки Анализ требований Проектирование Программирование Тестирование Документирование Высокоуровневые концепции Архитектура ПО Парадигма Методология Процесс разработки Качество Направления Программирование ( Аспектно-ориентированное Объектно-ориентированное Предметно-ориентированное ) Методологии разработки Agile Cleanroom CASE UP RUP OpenUP RAD Scrum SAFe Модель Spotify MSF XP DSDM Модели Итеративная Каскадная Спиральная V-Model Dual Vee Model CMM CMMI Данных Function model [англ.] IDEF Информационная Метамодель Object model [англ.] View model [англ.] UML Известные деятели Кент Бек Гради Буч Фред Брукс Уорд Каннингем Оле-Йохан Даль Том Демарко Эдсгер Дейкстра Дональд Кнут Алан Кэй Мартин Фаулер Энтони Хоар Ивар Якобсон Бертран Мейер Никлаус Вирт Эдвард Йордан Стив Макконнелл Джеймс Рамбо Барри Боэм Уоттс Хамфри [англ.] Майкл А. Джексон [англ.] Крэг Ларман Роберт Мартин Джеймс Мартин [англ.] Дэвид Парнас [англ.] Уинстон Ройс Распространение программного обеспечения Лицензии Свободное Свободное и открытое Бесплатное Открытое Проприетарное В общественном достоянии Модели дохода Бесплатное Freemium Условно-бесплатное Adware Demoware Donationware Nagware Postcardware Коммерческое Методы доставки On-premises Предустановленное Бандл SaaS (Software on-demand) Software plus services Обманные/незаконные Вредоносная программа Черви Троян Spyware Лжеантивирус Vaporware Прочее Abandonware Активация продукта Shovelware Легализация ПО Произведение с недоступным правообладателем Источник — https://ru.wikipedia.org/w/index.php?title=Программное_обеспечение&oldid=143295919 Категория : Программное обеспечение Скрытые категории: Википедия:Cite web (не указан язык) Страницы, использующие волшебные ссылки ISBN Статьи со ссылками на Викисклад Навигация Поиск