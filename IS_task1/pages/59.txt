.NET Framework — Википедия .NET Framework Материал из Википедии — свободной энциклопедии Текущая версия страницы пока не проверялась опытными участниками и может значительно отличаться от версии, проверенной 7 июня 2024 года ; проверки требует 1 правка . Перейти к навигации Перейти к поиску Запрос «NET» перенаправляется сюда; см. также другие значения . .NET Framework Компоненты .NET Framework до версии 4.5 включительно Тип Фреймворк Разработчик Microsoft Операционная система Windows Первый выпуск 13 февраля 2002 Аппаратная платформа Windows Последняя версия 4.8.1 [ 1 ] ( 9 августа 2022 года ) Читаемые форматы файлов: Microsoft .NET XML Resource template (UTF-8) [вд] , Microsoft .NET XML Resource template [вд] , .NET Framework Resource data [вд] , .NET Micro Framework TinyFont [вд] и .NET Micro Framework PE executable [вд] Создаваемые форматы файлов: Microsoft .NET XML Resource template (UTF-8) [вд] , Microsoft .NET XML Resource template [вд] , .NET Framework Resource data [вд] , .NET Micro Framework TinyFont [вд] и .NET Micro Framework PE executable [вд] Лицензия MIT [ 2 ] Сайт dotnet.microsoft.com Медиафайлы на Викискладе .NET Framework — программная платформа, выпущенная компанией Microsoft в 2002 году . Основой платформы является общеязыковая среда исполнения Common Language Runtime (CLR) , которая подходит для различных языков программирования. Функциональные возможности CLR доступны в любых языках программирования, использующих эту среду. В настоящее время .NET Framework развивается в виде .NET . Считается, что платформа .NET Framework является ответом компании Microsoft на набравшую к тому времени большую популярность платформу Java компании Sun Microsystems (ныне принадлежит Oracle ). Хотя .NET Framework является патентованной технологией корпорации Microsoft и официально рассчитана на работу под операционными системами семейства Windows , существуют независимые проекты (прежде всего это Mono и Portable.NET ), позволяющие запускать программы .NET Framework на некоторых других операционных системах. Содержание 1 Разработка 1.1 Цели и задачи 1.2 Концепция 1.3 Смена названия 1.4 Презентация предварительной версии .NET 1.5 Выпуск первых версий 2 Базовые принципы проектирования 3 Архитектура .NET 4 Среды разработки 5 Версии 5.1 .NET Framework 1.0 5.2 .NET Framework 1.1 5.3 .NET Framework 2.0 5.4 .NET Framework 3.0 5.5 .NET Framework 3.5 5.6 .NET Framework 4.0 5.7 .NET Framework 4.5 5.7.1 .NET Framework 4.5.1 5.7.2 .NET Framework 4.5.2 5.8 .NET Framework 4.6 5.8.1 .NET Framework 4.6.1 5.8.2 .NET Framework 4.6.2 5.9 .NET Framework 4.7 5.9.1 .NET Framework 4.7.1 5.9.2 .NET Framework 4.7.2 5.10 .NET Framework 4.8 5.11 Поддержка ОС 6 Языки программирования в .NET 7 Критика 8 Альтернативные реализации 9 См. также 10 Примечания 11 Литература 12 Ссылки Разработка [ править | править код ] Разработка платформы началась в 1999 году [ 3 ] .
Официально о разработке новой технологии было объявлено 13 января 2000 года, в день, когда Билл Гейтс официально объявил о передаче поста главы Microsoft Стиву Балмеру . В этот день руководство корпорации объявило о новой стратегии компании, получившей название Next Generation Windows Services (NGWS, «новое поколение служб Windows»). Новая стратегия должна была объединить в единый набор существующие и будущие разработки Microsoft для предоставления возможности пользователям работать со Всемирной паутиной с беспроводных устройств, обладающих доступом в Интернет , как со стационарных компьютеров [ 4 ] . Цели и задачи [ править | править код ] Во время проходившей в тот день пресс-конференции Балмер заявил, что, несмотря на огромные возможности домашних компьютеров, корпорация считает важным обеспечение гарантированной работы служб нового поколения и на устройствах, отличных от ПК. Что касается Гейтса, то аналитик компании Patricia Seybold Group Энн Томас Мейнс, проанализировав его слова, заявила о том, что компании будет полезен отход от ориентации исключительно на стационарные компьютеры и переход к разработке под мобильные устройства. По её оценке, Гейтс провозгласил курс на переход к новой эре работы с компьютером, которая не будет жёстко привязана к Windows [ 4 ] . Ввиду небольшой мощности источников питания мобильных устройств хранение и передача приложений должна осуществляться серверами, тогда как на тот момент практически вся пользовательская информация и ПО хранились на стационарных компьютерах локально. Тогда идея перехода к «сервероцентрической» модели имела крепкую поддержку среди руководителей крупнейших IT-компаний. Так, например, Скотт МакНили, глава Sun Microsystems , объявил о приобретении компании офисного ПО , конкурировавшего с Microsoft Office , для перехода к сервер-клиентскому ПО [ 4 ] . У Microsoft на тот момент было множество причин перехода к новой стратегии. Компания доминировала на рынке операционных систем и веб- браузеров , обладала множеством наработок в области ПО для Интернета, включая порталы MSN и WebTV, а также имела долю в компаниях, занимавшихся предоставлением ПО в прокат через Интернет [ 4 ] . Кроме того, как позднее вспоминал Андерс Хейлсберг , у корпорации имелось множество различных (и зачастую несовместимых между собой) сред и технологий программирования, поскольку разработка инструментов для программистов была языкоориентированной, то есть для Visual Basic существовал свой набор приложений, а для C++ — свой. Поэтому одной из целей разработки новой платформы было объединение всех наиболее удачных наработок в рамках единой платформы и их унификация. Кроме того, ставилась задача следования всем актуальным тенденциям в области программирования на тот момент. Так, например, новая платформа должна была напрямую поддерживать объектно-ориентированность, безопасность типов, сборку мусора и структурную обработку исключений. Кроме того, корпорации необходимо было предоставить свой ответ набиравшей популярность платформе Java от Sun Microsystems [ 5 ] . Согласно опубликованным на тот момент планам, в них входила разработка новой версии операционной системы, а также новой версии среды разработки для программистов, которая была бы предназначена для разработки веб-ориентированных приложений. Кроме того, переведён на новую платформу должен был быть и Microsoft Office. Пол Моритц, вице-президент Microsoft, в качестве одной из будущих служб новой стратегии привёл в пример службу Passport, представлявшую собой электронный бумажник, позволяющий пользователям, зарегистрировавшись однажды, совершать онлайн-покупки без необходимости ввода на различных сайтах номеров кредитных карт и персональных данных. Тогда же, на конференции, Балмер привёл пример реализации новой стратегии, которая позволит пациентам решать множество своих проблем через Интернет, начиная с чтения своей медицинской карты и заканчивая оплатой счетов от врачей за медицинские услуги [ 4 ] . По словам Моритца, основой для новой стратегии компании послужила разработка Windows DNA 2000 , представленная в сентябре 1999 года. Windows DNA 2000 объединила в себе новую версию СУБД SQL Server и новые программные инструменты для облегчения разработки веб-приложений [ 4 ] . Концепция [ править | править код ] В феврале 2000 года Стив Балмер, выступая на конференции VBITS 2000 в Сан-Франциско , рассказал о новой версии Visual Basic и Visual C++ , являвшихся до той поры краеугольными камнями Visual Studio . Поскольку график выхода версий Visual Studio к тому моменту был заметно нарушен (Visual Studio 6.0 вышла в сентябре 1998 года, а до этого выпуски входящих в её состав инструментов происходили ежегодно), то информация о нововведениях вызывала изрядный интерес [ 6 ] (недоступная ссылка с 02-12-2017 [2671 день]) . Тогда же Балмер и представил концепцию стратегии NGWS (рабочее название которой Балмер счёл весьма ужасным и пообещал сменить его к моменту выпуска) в виде некоей программной платформы, которая позволит пользователям Windows получать доступ к множеству веб-служб. Для этого Microsoft рассчитывала значительно изменить Windows-платформу. Первым шагом к новой версии платформы стала Windows 2000 , которую Балмер назвал основой «пользовательского знакомства с Интернетом». Windows 2000 являлась одной из частей технологии Windows Distributed interNet Applications (DNA) 2000, в рамках которой была представлена последняя на тот момент схема трёхуровневой модели программирования, впервые представленная на Windows NT 4.0 [ 6 ] . На тот момент данная схема состояла из клиентской части (Windows- или веб-приложение), среднего уровня, базировавшегося на компонентах COM+ , и базы данных (как правило, SQL Server ). NGWS должна была сменить путь разработки Windows DNA на исключительное использование XML как стандарта обмена данными. XML был выбран потому, что являлся развитием языка разметки HTML , ставшего основным языком разметки во Всемирной паутине, а кроме того, он предоставлял удобный способ описания данных. В модели NGWS каждая часть трёхзвенной структуры (клиентское приложение, промежуточный слой и база данных) должна была взаимодействовать с остальными при помощи XML-пакетов. Для упрощения разработки кода с использованием XML предполагалось, что новая версия Visual Studio будет генерировать XML-код, освобождая разработчиков от необходимости ручного написания XML-кода [ 6 ] . Так, например, планировалось, что разработчики смогут писать веб-сайт для электронной коммерции целиком на новой версии Visual Basic, а благодаря тому, что обмен информацией будет происходить при помощи XML, разработчики смогут создавать клиентские приложения, функционирующие на Linux , Solaris и Mac OS . То есть для того, чтобы приложение или операционная система могли взаимодействовать друг с другом, нужна была лишь поддержка стандарта с их стороны [ 6 ] . Для демонстрации своего замысла Microsoft запустила веб-сайт Passport , зайдя на который, пользователь мог бесплатно завести себе электронный кошелёк (eWallet), упрощавший процесс совершения покупок в интернет-магазинах [ 6 ] . Смена названия [ править | править код ] 22 июня 2000 года на проходившем в Редмонде Forum 2000 Билл Гейтс заявил о переименовании платформы в Microsoft.Net, объявив при этом, что «стратегия корпорации целиком и полностью будет определяться платформой .Net», а все продукты Microsoft со временем будут переписаны для поддержки этой платформы. Также, по его словам, в течение ближайших двух лет Microsoft планировала выпуск новой версии своей ОС (которую изначально назвали Windows.Net, позже её реализовали как Microsoft Singularity ) и комплекта средств разработки, который должен был называться Visual Studio.Net. Помимо этого, изменения должны были затронуть и серверные приложения — Microsoft SQL Server, Exchange, BizTalk, а офисный пакет Microsoft Office должен был быть преобразован в Office.Net [ 7 ] . К выступлению Гейтса на июньском Forum 2000 было приурочено и опубликование документа под названием Microsoft .NET: Realizing the Next Generation Internet ( англ. Microsoft .NET: Создавая Интернет следующего поколения ) на официальном сайте Microsoft. В нём приводился общий обзор новой платформы, а само появление новой платформы описывалось как некая «революция». В этом документе впервые было приведено описание (хотя и краткое) технической реализации платформы. Так, разработчикам предлагалось вместо ручного набора большой массы кода собирать свои приложения из готовых блоков, что должно было ускорить разработку ПО. К таким «строительным блокам» относились, в частности, следующие модули: Identity («Личность») — технология, объединяющая Windows-аутентификацию и Microsoft Passport, созданная для обеспечения различных уровней безопасности, начиная от паролей и электронных кошельков и заканчивая смарт-картами и устройствами биометрической идентификации [ 8 ] . Презентация предварительной версии .NET [ править | править код ] 11 июля 2000 года на PDC во Флориде состоялась презентация предварительной версии .NET Framework, которая была представлена как «часть .NET Platform» [ 9 ] . Выпуск первых версий [ править | править код ] 12 ноября 2000 года Microsoft опубликовала на своём сайте .NET Framework SDK Beta 1, содержащий всё необходимое для первых опытов с новой платформой. Однако из-за «сырости» программы компания рекомендовала ставить её только на компьютеры, предназначенные исключительно для тестов. Данный SDK мог работать лишь в Windows 2000 , Windows NT 4.0 (содержащий NTOP для поддержки ASP.NET), Windows 98 и Windows Me , причём стабильная работа с незадолго до этого вышедшим SQL Server 2000 вовсе не гарантировалась [ 10 ] . Данная версия содержала огромное количество ошибок, начиная с проблем при установке и заканчивая неполной поддержкой собственных пространств имён в зависимости от версии Windows [ 11 ] . Базовые принципы проектирования [ править | править код ] Основной идеей при разработке .NET Framework являлось обеспечение свободы разработчика за счёт предоставления ему возможности создавать приложения различных типов, способные выполняться на различных типах устройств и в различных средах [ 12 ] . Вторым принципом стала ориентация на системы, работающие под управлением семейства операционных систем Microsoft Windows [ 12 ] . Архитектура .NET [ править | править код ] Стек технологий .NET Framework Программа для .NET Framework, написанная на любом поддерживаемом языке программирования, сначала переводится компилятором в единый для .NET промежуточный байт-код Common Intermediate Language (CIL) (ранее назывался Microsoft Intermediate Language, MSIL). В терминах .NET получается сборка , англ. assembly . Затем код либо исполняется виртуальной машиной Common Language Runtime (CLR) , либо транслируется утилитой NGen.exe в исполняемый код для конкретного целевого процессора. Использование виртуальной машины предпочтительно, так как избавляет разработчиков от необходимости заботиться об особенностях аппаратной части. В случае использования виртуальной машины CLR встроенный в неё JIT-компилятор «на лету» (just in time) преобразует промежуточный байт-код в машинные коды нужного процессора. Современная технология динамической компиляции позволяет достигнуть высокого уровня быстродействия. Виртуальная машина CLR также сама заботится о базовой безопасности, управлении памятью и системе исключений , избавляя разработчика от части работы. Архитектура .NET Framework описана и опубликована в спецификации Common Language Infrastructure (CLI) , разработанной Microsoft и утверждённой ISO и ECMA . В CLI описаны типы данных .NET, формат метаданных о структуре программы, система исполнения байт-кода и многое другое. Объектные классы .NET, доступные для всех поддерживаемых языков программирования, содержатся в библиотеке Framework Class Library (FCL) . В FCL входят классы Windows Forms , ADO.NET , ASP.NET , Language Integrated Query , Windows Presentation Foundation , Windows Communication Foundation и другие. Ядро FCL называется Base Class Library (BCL) . Среды разработки [ править | править код ] Среды разработки, поддерживающие .NET: Microsoft Visual Studio (C#, Visual Basic .NET, Managed C++, F#) SharpDevelop MonoDevelop Embarcadero RAD Studio (Delphi for .NET); ранее Borland Developer Studio (Delphi for .NET, C#) A# Zonnon PascalABC.NET JetBrains Rider Приложения .NET также можно разрабатывать в текстовом редакторе, просто вызывая компилятор из командной строки . Версии [ править | править код ] Версии и пакеты обновлений .NET Framework доступны тремя основными способами: через механизм автообновления Windows Update, для скачивания на сайте Microsoft Download Center и в составе новых версий операционных систем [ 13 ] . Версия CLR Номер версии Дата выхода Visual Studio По умолчанию в Windows Заменяет 1.0 1.0 1.0.3705.0 1 мая 2002 года Visual Studio .NET Работает на Windows 98, Windows 98 SE, Windows Me, Windows NT 4.0 SP6, Windows 2000 и Windows XP. .NET Framework 1.0 несовместим с Windows 95. н/д 1.1 1.1 1.1.4322.573 1 апреля 2003 года Visual Studio .NET 2003 Windows Server 2003 последняя поддерживаемая версия .NET Framework для Windows 98 FE и Windows NT 4.0 SP6 1.0 2.0 2.0 2.0.50727.42 11 июля 2005 года Visual Studio 2005 Windows Vista, Windows 7, Windows Server 2008 R2 .NET Framework 2.0 без пакетов обновлений — последняя поддерживаемая версия .NET Framework для Windows 98 SE и Windows Me .NET Framework 2.0 SP2 — последняя поддерживаемая версия .NET Framework для Windows 2000 SP4 н/д 3.0 2.0 3.0.4506.30 6 ноября 2006 года Visual Studio 2005 + расширения Windows Vista, Windows Server 2008, Windows 7, Windows Server 2008 R2 2.0 3.5 2.0 3.5.21022.8 9 ноября 2007 года Visual Studio 2008 Windows 7, Windows Server 2008 R2 последняя поддерживаемая версия .NET Framework для Windows XP SP2 2.0, 3.0 4.0 4 4.0.30319.1 12 апреля 2010 года Visual Studio 2010 Windows 8, Windows Server 2012 последняя поддерживаемая версия .NET Framework для Windows XP SP3 н/д 4.5 4 4.5.50709.17929 15 августа 2012 года Visual Studio 2012 Windows 8, Windows Server 2012 4.0 4.5.1 4 4.5.50938.18408 17 октября 2013 года Visual Studio 2013 Windows 8.1, Windows Server 2012 R2 последняя поддерживаемая версия .NET Framework для Windows 7 без SP1 4.0, 4.5 4.5.2 4 4.5.51209.34209 5 мая 2014 года н/д н/д 4.0-4.5.1 4.6 4 4.6.1038.0 20 июля 2015 года Visual Studio 2015 Windows 10 4.0-4.5.2 4.6.1 4 4.6.23123.0 17 ноября 2015 года Visual Studio 2015 Update 1 Windows 10 v1511 последняя поддерживаемая версия .NET Framework для Windows Vista SP2 4.0-4.6 4.6.2 4 4.6.23907.0 20 июля 2016 года Windows 10 v1607 4.0-4.6.1 4.7 4 4.7.02046 5 апреля 2017 года Visual Studio 2017 Windows 10 v1703 4.0-4.6.2 4.7.1 4 4.7.02556 17 октября 2017 года Visual Studio 2017 v15.5 [ 14 ] Windows 10 v1709, Windows Server 2016 (version 1709) [ 15 ] 4.0-4.7 4.7.2 4 4.7.03056 30 апреля 2018 года Visual Studio 2017 v15.8 [ 16 ] Windows 10 v1803 4.0-4.7.1 4.8 4 4.8.3761.0 18 апреля 2019 года Windows 10 v1903, последняя поддерживаемая версия .NET Framework для Windows 7 SP1 [ источник не указан 1141 день ] 4.0-4.7.2 4.8.1 4 9 августа 2022 года Visual Studio 2022 v17.3 Windows 10 v20H2, Windows 11 4.0-4.8 .NET Framework 1.0 [ править | править код ] Первый релиз .NET Framework вышел 5 января 2002 года для Windows 98 , NT 4.0 , 2000 и XP . Общая поддержка, осуществляемая компанией Майкрософт, закончилась 10 июля 2007 года , расширенная поддержка закончилась 14 июля 2009 года [ 17 ] . .NET Framework 1.1 [ править | править код ] Следующий релиз .NET Framework вышел 1 апреля 2003 года . Это была первая версия, автоматически устанавливаемая вместе с операционной системой ( Windows Server 2003 ). Для более старых операционных систем .NET Framework 1.1 была доступна в виде отдельного установочного пакета. Общая поддержка, осуществляемая компанией Майкрософт, закончилась 14 октября 2008 года , а расширенная поддержка закончилась 8 октября 2013 года [ 17 ] . .NET Framework 2.0 [ править | править код ] Версия 2.0 была выпущена одновременно с Visual Studio 2005 , SQL Server 2005 и BizTalk 2006 . С выходом версии 2.0 была добавлена поддержка настраиваемых (обобщённых) ( англ. generic ) классов, анонимных методов , полная поддержка 64-битных платформ x64 и IA-64 . Общая поддержка, осуществляемая компанией Майкрософт, закончилась 12 апреля 2011 года , а расширенная поддержка закончилась 12 апреля 2016 года [ 17 ] . .NET Framework 3.0 [ править | править код ] Первоначально .NET Framework 3.0 носила имя WinFX, что отражало её суть: расширение .NET Framework 2.0 с сохранением всех библиотек и добавлением четырёх новых компонентов: Windows Presentation Foundation (WPF) — презентационная графическая подсистема, использующая XAML ; Windows Communication Foundation (WCF) — унифицированная программная модель межплатформенного взаимодействия; Windows Workflow Foundation (WF) — технология определения, выполнения и управления рабочими процессами; Windows CardSpace — технология унифицированной идентификации. Поддержка, осуществляемая компанией Майкрософт, закончилась 12 июля 2011 года [ 17 ] . .NET Framework 3.5 [ править | править код ] Как и версия 3.0, .NET 3.5 использует CLR версии 2.0. Новшества по сравнению с .NET Framework 3.0 включают в себя: C# 3.0 и VB.NET 9.0 Добавлен язык LINQ и провайдеры LINQ to Objects, LINQ to XML и LINQ to SQL ASP.NET AJAX включён в поставку Расширена функциональность WF и WCF Добавлено пространство имён System.CodeDom .NET Framework 4.0 [ править | править код ] Microsoft анонсировала .NET 4.0 29 сентября 2008 года [ 18 ] . Первая бета-версия появилась 20 мая 2009 года, вместе с бета-версией Visual Studio 2010 [ 19 ] . Нововведения включают в себя: Parallel Extensions — PLINQ (Parallel LINQ ) и библиотеку параллельных задач (Task Parallel Library) [ 20 ] , предназначенные для упрощения программирования для многопроцессорных и распределённых систем Нововведения в Visual Basic и C# Технологию Managed Extensibility Framework (MEF) Полную поддержку IronPython , IronRuby и F# Поддержку подмножеств .NET Framework и ASP.NET в варианте Server Core Поддержку Code Contracts Средства моделирования Oslo и язык программирования M , предназначенный для создания предметно-ориентированных языков и моделей Окончательная версия .NET Framework 4.0 была выпущена 12 апреля 2010 года вместе с окончательной версией Visual Studio 2010 . Версия 4.0.3 это максимальная которая может быть установлена на Windows XP .NET Framework 4.5 [ править | править код ] При установке заменяет .NET Framework 4.0.
Несовместима с Windows XP и более ранними версиями Windows. Нововведения включают в себя: Возможность уменьшения количества перезапусков системы путём обнаружения и закрытия приложений платформы .NET Framework версии 4 во время развёртывания. Поддержка массивов, размер которых превышает 2 гигабайта (ГБ) на 64-разрядных платформах. Улучшенная производительность благодаря фоновой сборке мусора для серверов. При использовании серверной сборки мусора в .NET Framework 4.5 фоновая сборка мусора включается автоматически. Фоновая компиляция по требованию (JIT), которая опционально доступна на многоядерных процессорах для повышения производительности приложения. Возможность ограничить, как долго обработчик регулярных выражений будет пытаться разрешить регулярное выражение до истечения времени ожидания. Возможность определить культуру по умолчанию для домена приложения. Поддержка кодировки Юникод (UTF-16) в консоли. Поддержка управления версиями культурных данных сортировки и сравнения строк. Улучшенная производительность при извлечении ресурсов. Улучшения сжатия ZIP. Возможность настраивать контекст отражения для переопределения поведения отражения по умолчанию. Поддержка версии 2008 стандарта интернационализированных доменных имён в приложениях, когда класс используется в Windows 8. Делегирование сравнения строк операционной системе, которая реализует Юникод 6.0, если платформа .NET Framework используется в Windows 8. При работе на других платформах платформа .NET Framework включает собственные сведения о сравнении строк, которые реализуют Юникод 5.xx. Возможность вычисления хеш-кода для строк на основе домена для каждого приложения. Поддержка JSON .NET Framework 4.5.1 [ править | править код ] .NET Framework 4.5.1 выпущен 17 октября 2013 года вместе с Visual Studio 2013. Эта версия требует Windows Vista SP2 или более свежую версию, и поставляется вместе с Windows 8.1 и Windows Server 2012 R2 . .NET Framework 4.5.2 [ править | править код ] .NET Framework 4.5.2 является обновлением .NET Framework 4.5.1, .NET Framework 4.5, и .NET Framework 4. Устанавливается, при необходимости, бок о бок с .NET Framework 3.5 Service Pack 1. .NET Framework 4.6 [ править | править код ] .NET Framework 4.6 является обновлением .NET Framework 4.5.2, .NET Framework 4.5.1, .NET Framework 4.5, и .NET Framework 4. Устанавливается, при необходимости, бок о бок с .NET Framework 3.5 Service Pack 1. Является частью редакции Microsoft Visual Studio 2015. .NET Framework 4.6 поддерживает новый JIT-компилятор для 64-разрядных систем (RyuJIT); WPF и WinForms обновлены для поддержки экранов с высоким DPI; в WCF была добавлена поддержка TLS 1.1 и TLS 1.2. Криптографический API в .NET Framework 4.6 использует последнюю версию API от Microsoft CryptoAPI , благодаря этому стал доступен набор алгоритмов шифрования «Suite B» — AES, SHA-2, Elliptic curve Diffie-Hellman, ECDSA [ 21 ] . .NET Framework 4.6.1 [ править | править код ] .NET Framework 4.6.1 является обновлением .NET Framework 4.6, .NET Framework 4.5.2, .NET Framework 4.5.1, .NET Framework 4.5, и .NET Framework 4. Устанавливается, при необходимости, бок о бок с .NET Framework 3.5 Service Pack 1. Является частью редакции Microsoft Visual Studio 2015 Update 1. .NET Framework 4.6.2 [ править | править код ] .NET Framework 4.6.2 был выпущен 30 марта 2016 года и выпущен 2 августа 2016 года [ 22 ] .
Является обновлением .NET Framework версий 4.6.1, 4.6, 4.5.2, 4.5.1, 4.5 и 4.
Для установки требуется Windows 7 SP1 или выше.
Устанавливается, при необходимости, бок о бок с .NET Framework 3.5 Service Pack 1. .NET Framework 4.7 [ править | править код ] .NET Framework 4.7 был выпущен 5 апреля 2017 года. .NET Framework 4.7.1 [ править | править код ] .NET Framework 4.7.1 был выпущен 17 октября 2017 года. .NET Framework 4.7.2 [ править | править код ] .NET Framework 4.7.2 был выпущен 30 апреля 2018 года. .NET Framework 4.8 [ править | править код ] .NET Framework 4.8 был выпущен 18 апреля 2019 года [ 23 ] [ 24 ] . .NET Framework 4.8.1 .NET Framework 4.8.1 был выпущен 9 августа 2022 года [ 25 ] . Поддержка ОС [ править | править код ] [ 26 ] Версии и зависимости платформы .NET Framework Версия .NET Framework ОС 1.0 1.1 2.0 3.0 3.5 4.0 4.5 4.5.1 4.5.2 4.6 4.6.1 4.6.2 4.7 4.7.1 4.7.2 4.8 4.8.1 Windows 98 + + + Windows NT 4.0 + + Windows Me + + + Windows 2000 + + + Windows XP + + + + + + Windows Server 2003 + + + + + Windows Server 2008 + + + + + + + + + + Windows Vista + + + + + + + + + + Windows 7 + + + + + + + + + + + + + + Windows Server 2008 R2 + + + + + + + + + + + + + + Windows Server 2012 + + + + + + + + + + + + + + Windows 8 + + + + + + + + + Windows Server 2012 R2 + + + + + + + + + + + + + + Windows 8.1 + + + + + + + + + + + + + + Windows 10 + + + + + + + + + + + + + + + Windows Server 2016 + + + + + + + + + + + + + + Windows Server 2019 + + + + + + + + + + + + + + Windows Server 2022 + + + + + + + + + + + + + + + Windows 11 + + + + + + + + + + + + + + + Языки программирования в .NET [ править | править код ] Основная статья: Список .NET-языков Одной из основных идей Microsoft .NET является совместимость программных частей, написанных на разных языках. Например, служба, написанная на C++ для Microsoft .NET, может обратиться к методу класса из библиотеки, написанной на Delphi; на C# можно написать класс, наследованный от класса, написанного на Visual Basic .NET, а исключение, созданное методом, написанным на C#, может быть перехвачено и обработано в Delphi. Каждая библиотека (сборка) в .NET имеет сведения о своей версии, что позволяет устранить возможные конфликты между разными версиями сборок. Языки, поставляемые вместе с Microsoft Visual Studio : C# Visual Basic .NET JScript .NET C++/CLI — новая версия Managed C++ F# — член семейства языков программирования ML , включён в VS2010/VS2012/VS2015/VS2017/VS2019/VS2022 J# — последний раз был включён в VS2005 Критика [ править | править код ] Реализация платформы .NET Framework вызывала и вызывает множество нареканий. С технической точки зрения платформа также подвергалась критике из-за отсутствия поддержки вызовов Streaming SIMD Extensions (SSE) в управляемом коде. В Mono решили эту проблему, добавив поддержку SIMD Extensions версии 2.2 в пространство имён Mono.Simd . В состав .NET Framework 4.6 входит новый JIT-компилятор RyuJIT, поддерживающий SIMD через пространство имён System.Numerics [ 27 ] . Новые версии платформы (3.5 и далее) вызвали новую волну недовольства тем, что они не предустанавливаются в версии Windows, предшествовавшие выходу Windows 7 , что вынуждает пользователей тратить значительное время на их установку [ 28 ] . Альтернативные реализации [ править | править код ] .NET (ранее известна как .NET Core ) — преемник .NET Framework, является открытой и кроссплатформенной реализацией .NET Framework от корпорации Microsoft . .NET Compact Framework — версия .NET Framework, предназначенная для запуска приложений на устройствах, основанных на платформе Windows CE. .NET Micro Framework — реализация платформы Microsoft .NET для встраиваемого применения в 32- и 64-разрядных микроконтроллерах. Mono — проект по созданию полноценного воплощения системы .NET Framework на базе свободного программного обеспечения . Portable.NET DotGNU См. также [ править | править код ] .NET Remoting — компонент, созданный компанией Microsoft для межпроцессного взаимодействия. Microsoft Silverlight Common Language Infrastructure Code Access Security Сравнение C# и Java The .NET Show Примечания [ править | править код ] ↑ Announcing .NET Framework 4.8.1 | .NET blog Архивная копия от 10 августа 2022 на Wayback Machine (англ.) ↑ Компания Microsoft анонсировала открытие платформы .Net и её портирование для Linux Архивная копия от 9 декабря 2014 на Wayback Machine (рус.) ↑ Стив Резник, Ричард Крейн, Крис Боуэн. Вступление // Основы Windows Communication Foundation для .NET Framework 3.5 = Windows Communication Foundation for .NET Framework 3.5 / Пер. с англ. Слинкина А. А.. — М. : ДМК Пресс, 2008. — С. 16 . — 480 с. — ISBN 978-5-94074-465-8 . ↑ 1 2 3 4 5 6 Redmond maps plans for life after the PC Архивная копия от 15 марта 2014 на Wayback Machine (англ.) ↑ The A-Z of Programming Languages: C# Архивная копия от 18 февраля 2009 на Wayback Machine (англ.) ↑ 1 2 3 4 5 An Early Look at Microsoft’s Next Generation Windows Services Архивная копия от 17 октября 2011 на Wayback Machine (англ.) ↑ Windows разделят на услуги (рус.) . Дата обращения: 17 августа 2011. Архивировано 26 апреля 2014 года. ↑ Microsoft .NET: Realizing the Next Generation Internet (англ.) ↑ Microsoft .NET Framework Unites Programming Languages For Web-Based Future (англ.) ↑ MSDN Online Downloads. .NET Framework SDK Beta 1 (англ.) ↑ .NET Framework SDK: Late-Breaking Known Issues (англ.) ↑ 1 2 Principal Design Features of .NET Framework Архивная копия от 1 сентября 2011 на Wayback Machine (англ.) ↑ Benefits of the Microsoft .NET Framework Архивная копия от 31 августа 2013 на Wayback Machine (англ.) ↑ Announcing the .NET Framework 4.7.1 (англ.) . Дата обращения: 6 декабря 2017. Архивировано 31 декабря 2017 года. ↑ Install the .NET Framework on Windows 10 and Windows Server 2016 (англ.) . Дата обращения: 6 декабря 2017. Архивировано 6 декабря 2017 года. ↑ Visual Studio 2017 version 15.8 (англ.) . Дата обращения: 17 августа 2018. Архивировано 17 августа 2018 года. ↑ 1 2 3 4 Сведения о жизненном цикле различных версий .NET Framework (англ.) . Дата обращения: 29 августа 2008. Архивировано 26 июля 2009 года. ↑ CNews: Microsoft анонсировала Visual Studio 2010 и .NET Framework 4.0 (рус.) . Дата обращения: 11 июня 2019. Архивировано из оригинала 27 июля 2014 года. ↑ Visual Studio 2010 and .NET FX 4 Beta 1 ships! (англ.) . Дата обращения: 15 июля 2009. Архивировано из оригинала 23 мая 2009 года. ↑ Task Parallel Library — библиотека параллельных задач (рус.) . Дата обращения: 9 февраля 2012. Архивировано 21 февраля 2012 года. ↑ Lander, Rich. Announcing .NET Framework 4.6 (англ.) . .NET Blog . Microsoft (20 июля 2015). Архивировано из оригинала 6 августа 2015 года. ↑ Announcing .NET Framework 4.6.2 (англ.) . .NET Blog . Microsoft. Дата обращения: 9 февраля 2022. Архивировано 24 октября 2016 года. ↑ Announcing the .NET Framework 4.8 (англ.) . .NET Blog . Microsoft (18 апреля 2019). Архивировано 18 апреля 2019 года. ↑ Upcoming Updates for .NET Framework 4.8 (англ.) . .NET Blog . Microsoft (19 апреля 2019). Архивировано 20 апреля 2019 года. ↑ Announcing .NET Framework 4.8.1 (англ.) . .NET Blog . Microsoft (9 августа 2022). Архивировано 10 августа 2022 года. ↑ gewarren. Требования к системе для .NET Framework - .NET Framework (рус.) . docs.microsoft.com . Дата обращения: 9 февраля 2022. Архивировано 9 февраля 2022 года. ↑ RyuJIT CTP5: Getting closer to shipping, and with better SIMD support (англ.) (30 октября 2014). Дата обращения: 12 августа 2015. Архивировано из оригинала 31 августа 2015 года. ↑ Criticism Of Microsoft .NET Framework Архивная копия от 27 августа 2011 на Wayback Machine (англ.) Литература [ править | править код ] Кристиан Нейгел и др. C# 5.0 и платформа .NET 4.5 для профессионалов = Professional C# 5.0 and .NET 4.5. — М. : «Диалектика» , 2013. — 1440 с. — ISBN 978-5-8459-1850-5 . Эндрю Троелсен. Язык программирования C# 5.0 и платформа .NET 4.5, 6-е издание = Pro C# 5.0 and the .NET 4.5 Framework, 6th edition. — М. : «Вильямс» , 2013. — 1312 с. — ISBN 978-5-8459-1814-7 . Джеф Просиз . Программирование для Microsoft .NET = Programming Microsoft .NET. — М. : Русская редакция , 2003. — С. 704. — ISBN 5-7502-0217-8 . Ссылки [ править | править код ] dotnet.microsoft.com — официальный сайт .NET Framework C# Версии 1.0 2.0 [англ.] 3.0 [англ.] 4.0 [англ.] 4.0 [англ.] ПО Visual C# Visual Studio Mono SharpDevelop Turbo C# [англ.] Cω Связанное Синтаксис Сравнение с Java .NET Framework Sing# Компоненты Microsoft Windows Основные Aero ClearType Диспетчер окон рабочего стола DirectX Панель задач Пуск Область уведомлений Проводник Пространство имён Ассоциации файлов Поиск Windows IFilter Indexing Service GDI SMB Active Scripting WSH VBScript JScript COM OLE DCOM ActiveX Теневая копия WDDM UAA Консоль Win32 Windows Spotlight Windows Mixed Reality Службы управления Служба архивации и восстановления COMMAND.COM cmd.exe Средство переноса данных Просмотр событий Windows Installer netsh PowerShell rundll32.exe Sysprep MSConfig Проверка системных файлов Индекс производительности Центр обновления Восстановление системы Дефрагментация диска Диспетчер задач Диспетчер устройств Консоль управления Очистка диска Параметры Windows Панель управления Приложения Win32 Internet Explorer Microsoft Edge Paint WordPad Блокнот Записки Журнал Звукозапись Ножницы Проигрыватель Windows Media Распознавание речи Просмотр фотографий Таблица символов Факсы и сканирование Центр мобильности Центр устройств Windows Mobile Экранная лупа UWP Microsoft Store Paint 3D Удалённый помощник Календарь Калькулятор Кортана Музыка Groove Люди Параметры Почта Фотографии Экранный диктор Исторические Anytime Upgrade Киностудия NetMeeting Outlook Express Диспетчер программ Диспетчер файлов Фотоальбом Windows To Go Контакты DVD-студия Media Center Боковая панель Игры Chess Titans Purble Place Пасьянсы Косынка Паук Солитер Microsoft Mahjong Microsoft Solitaire Collection Сапёр Пинбол Червы InkBall Microsoft Tinker Ядро ОС Ntoskrnl.exe hal.dll svchost.exe Реестр Служба Диспетчер управления службами NTLDR Диспетчер загрузки Программа входа в систему (winlogon.exe) Консоль восстановления Windows RE Windows PE Защита ядра от изменений Службы Background Intelligent Transfer Service Отчёты об ошибках Планировщик классов мультимедиа Теневая копия Планировщик задач Беспроводная настройка Файловые системы ReFS NTFS Точка соединения Точка повторной обработки TxF EFS WinFS FAT exFAT CDFS UDF DFS IFS Серверы Active Directory Службы развёртывания Служба репликации файлов Служба доменов Hyper-V IIS Media Services MSMQ Защита доступа к сети (NAP) Службы печати для UNIX Службы удалённой установки Службы управления правами Перемещаемые профили пользователей SharePoint Диспетчер системных ресурсов Программа удалённого администрирования WSUS Координатор распределённых транзакций Архитектура NT Диспетчер объектов Пакеты запроса ввода/вывода Диспетчер транзакций ядра Диспетчер логических дисков Диспетчер учётных записей безопасности Защита ресурсов lsass.exe csrss.exe smss.exe spoolsv.exe Запуск Безопасность BitLocker Защитник Предотвращение выполнения данных Обязательный контроль целостности UAC UIPI Брандмауэр Центр обеспечения безопасности Защита файлов Совместимость Подсистема UNIX (Interix) Виртуальная машина DOS Windows on Windows WOW64 .NET Реализации .NET (Core) .NET Framework DotGNU Mono .NET Compact Framework Xbox 360 .NET Micro Framework Portable.NET XNA Framework Silverlight Shared Source Common Language Infrastructure Архитектура Base Class Library Common Language Infrastructure .NET assembly метаданные COM Interop Инфраструктура Common Language Runtime Common Type System Common Intermediate Language Virtual Execution System [англ.] Dynamic Language Runtime Языки Microsoft C# Cω Visual Basic .NET C++/CLI Managed Visual J# JScript .NET Windows PowerShell IronPython IronRuby F# Spec# Sing# Другие языки A# Boo IronScheme Clojure Nemerle P# PascalABC.NET PHP Scala Cobra Delphi Prism Windows Foundations Presentation Communication Workflow Компоненты ADO.NET Entity Framework Data Services ASP.NET AJAX MVC Dynamic Data [англ.] .NET Remoting Language Integrated Query Windows CardSpace Windows Forms XAML ClickOnce Dynamic Language Runtime Parallel Extensions PLINQ TPL Сравнения C# и Java C# и Visual Basic .NET [англ.] Будущие технологии Jasper Информационные ресурсы The .NET Show NuGet Microsoft ПО Azure Sphere Windows ( Основные компоненты ) Windows Phone Office Visual Studio Expression Silverlight Dynamics Money Encarta Student Works Microsoft Security Essentials Серверное ПО [англ.] Windows Server SQL Server IIS Exchange BizTalk Commerce [англ.] Forefront TMG Systems Management System Center Licensing Services [англ.] Технологии Active Directory DirectX .NET .NET Framework Windows Media PlaysForSure [англ.] App-V [англ.] Интернет Windows Live Основные компоненты Microsoft Office Live MSNBC ninemsn MSN Bing Bing Bar Edge EntityCube Groove Music Outlook.com Hotmail Windows Live Messenger Сферы Windows Live MSN Groups Учётная запись Microsoft Ignition [англ.] CodePlex Microsoft HealthVault [англ.] Skype OneDrive Vine Zune Marketplace Игры Xbox Game Studios ( Mojang Studios , ZeniMax Media / Bethesda Softworks / Bethesda Game Studios , 343 Industries , Double Fine и др.) MSN Games XNA Поколения Xbox Xbox 360 360 S One Series X/S Kinect Сеть Xbox Live Gold Arcade Games Store Game Pass Cloud Gaming Store Games for Windows Live Tray and Play Live Anywhere Аппаратное обеспечение Surface Zune ( 4, 8, 16 [англ.] 30 [англ.] 80, 120 [англ.] HD ) MSN TV Natural Keyboard [англ.] IntelliType [англ.] IntelliPoint [англ.] LifeCam [англ.] LifeChat [англ.] SideWinder [англ.] UMPC Fingerprint [англ.] Audio [англ.] Cordless Phone [англ.] Pocket PC RoundTable [англ.] Response Point [англ.] KIN HoloLens Surface Pro 9 Образование MTA MCP MCTS MSDN MSDNAA MSCA [англ.] Microsoft Press [англ.] MVP [англ.] Student Partners Лицензирование Лицензионная политика Client Access License Shared Source Подразделения Microsoft Research MSN Macintosh Business Unit Microsoft Gaming Рекламные кампании Where do you want to go today? (1994) Champagne (2002) Mojave Experiment (2006) I'm a PC (2008) Scroogled (2012) Совет директоров Балмер Кэш [англ.] Дублон [англ.] Гейтс Гилмартин [англ.] Хастингс Маркурдт [англ.] Наделла Носки [англ.] Панке [англ.] Ширли [англ.] Свободное и открытое программное обеспечение Microsoft Общая информация Microsoft и открытое программное обеспечение [англ.] Shared Source Initiative Программное обеспечение Приложения Atom Conference XP Диспетчер файлов Open Live Writer PowerToys for Windows 10 Калькулятор (Windows) Windows Console Windows Package Manager Windows Terminal WorldWide Telescope XML Notepad Игры Allegiance [англ.] Языки программирования Bosque C# Dafny F# F* GW-BASIC IronPython IronRuby Lean P [англ.] PowerShell Q# R Open Small Basic TypeScript Visual Basic .NET Фреймворки и средства разработки .NET Bio .NET .NET Framework .NET Gadgeteer .NET Micro Framework ADO.NET Entity Framework AirSim Apache Helix ASP.NET ASP.NET AJAX ASP.NET Core ASP.NET MVC ASP.NET Razor ASP.NET Web Forms Babylon.js Blazor C++/WinRT ChakraCore [англ.] CLR Profiler DiskSpd Dryad [англ.] Dynamic Language Runtime Electron Managed Extensibility Framework Microsoft Automatic Graph Layout Microsoft C++ Standard Library Microsoft Cognitive Toolkit Microsoft Detours Microsoft Enterprise Library Microsoft SEAL ML.NET mod_mono Mono MonoDevelop MSBuild npm NuGet Open Management Infrastructure ONNX Orleans [англ.] ProcDump Python Tools for Visual Studio R Tools for Visual Studio Roslyn Sandcastle SignalR StyleCop SVNBridge T2 Temporal Prover Text Template Transformation Toolkit TLA⁺ U-Prove vcpkg Virtual File System for Git Visual Studio Code Voldemort [англ.] Vowpal Wabbit Windows Communication Foundation Windows Driver Frameworks Windows Forms Windows Presentation Foundation Windows Template Library Windows UI Library WinJS WinObjC WiX XSP [англ.] xUnit.net Z3 Theorem Prover Операционные системы MS-DOS Barrelfish Прочее ChronoZoom Project Mu SILK TLAPS TPM 2.0 Reference Implementation WikiBhasha Лицензии Microsoft Public License Microsoft Reciprocal License Связанные темы .NET Foundation F Sharp Software Foundation Microsoft Open Specification Promise Outercurve Foundation Категория Источник — https://ru.wikipedia.org/w/index.php?title=.NET_Framework&oldid=139520791 Категории : Программное обеспечение по алфавиту Программное обеспечение, разработанное в 2002 году .NET Свободное и открытое программное обеспечение Microsoft Скрытые категории: Страницы, использующие волшебные ссылки ISBN Википедия:Статьи с изображениями: заполнить свойство P373 в Викиданных ПРО:ИТ:Статьи по алфавиту ПРО:ИТ:Последняя правка: в прошлом году Википедия:Статьи с нерабочими ссылками с декабря 2017 Википедия:Статьи без источников (не распределённые по типам) Википедия:Нет источников с февраля 2022 Википедия:Статьи с утверждениями без источников более 14 дней Навигация Поиск